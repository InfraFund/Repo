{
	"compiler": {
		"version": "0.6.12+commit.27d51765"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "authorizer",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "nonce",
						"type": "bytes32"
					}
				],
				"name": "AuthorizationCanceled",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "authorizer",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "nonce",
						"type": "bytes32"
					}
				],
				"name": "AuthorizationUsed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_account",
						"type": "address"
					}
				],
				"name": "Blacklisted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "newBlacklister",
						"type": "address"
					}
				],
				"name": "BlacklisterChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "burner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Burn",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "newMasterMinter",
						"type": "address"
					}
				],
				"name": "MasterMinterChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "minter",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Mint",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "minter",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "minterAllowedAmount",
						"type": "uint256"
					}
				],
				"name": "MinterConfigured",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "oldMinter",
						"type": "address"
					}
				],
				"name": "MinterRemoved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "Pause",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "newAddress",
						"type": "address"
					}
				],
				"name": "PauserChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "newRescuer",
						"type": "address"
					}
				],
				"name": "RescuerChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_account",
						"type": "address"
					}
				],
				"name": "UnBlacklisted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "Unpause",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "CANCEL_AUTHORIZATION_TYPEHASH",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "DOMAIN_SEPARATOR",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "PERMIT_TYPEHASH",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "RECEIVE_WITH_AUTHORIZATION_TYPEHASH",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "TRANSFER_WITH_AUTHORIZATION_TYPEHASH",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "authorizer",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "nonce",
						"type": "bytes32"
					}
				],
				"name": "authorizationState",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_account",
						"type": "address"
					}
				],
				"name": "blacklist",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "blacklister",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "burn",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "authorizer",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "nonce",
						"type": "bytes32"
					},
					{
						"internalType": "uint8",
						"name": "v",
						"type": "uint8"
					},
					{
						"internalType": "bytes32",
						"name": "r",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "s",
						"type": "bytes32"
					}
				],
				"name": "cancelAuthorization",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "minter",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "minterAllowedAmount",
						"type": "uint256"
					}
				],
				"name": "configureMinter",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "currency",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "decrement",
						"type": "uint256"
					}
				],
				"name": "decreaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "increment",
						"type": "uint256"
					}
				],
				"name": "increaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "tokenName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "tokenSymbol",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "tokenCurrency",
						"type": "string"
					},
					{
						"internalType": "uint8",
						"name": "tokenDecimals",
						"type": "uint8"
					},
					{
						"internalType": "address",
						"name": "newMasterMinter",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "newPauser",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "newBlacklister",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "initialize",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "newName",
						"type": "string"
					}
				],
				"name": "initializeV2",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_account",
						"type": "address"
					}
				],
				"name": "isBlacklisted",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "isMinter",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "masterMinter",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "mint",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "minter",
						"type": "address"
					}
				],
				"name": "minterAllowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "nonces",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "paused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pauser",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "v",
						"type": "uint8"
					},
					{
						"internalType": "bytes32",
						"name": "r",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "s",
						"type": "bytes32"
					}
				],
				"name": "permit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "validAfter",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "validBefore",
						"type": "uint256"
					},
					{
						"internalType": "bytes32",
						"name": "nonce",
						"type": "bytes32"
					},
					{
						"internalType": "uint8",
						"name": "v",
						"type": "uint8"
					},
					{
						"internalType": "bytes32",
						"name": "r",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "s",
						"type": "bytes32"
					}
				],
				"name": "receiveWithAuthorization",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "minter",
						"type": "address"
					}
				],
				"name": "removeMinter",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC20",
						"name": "tokenContract",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "rescueERC20",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "rescuer",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "validAfter",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "validBefore",
						"type": "uint256"
					},
					{
						"internalType": "bytes32",
						"name": "nonce",
						"type": "bytes32"
					},
					{
						"internalType": "uint8",
						"name": "v",
						"type": "uint8"
					},
					{
						"internalType": "bytes32",
						"name": "r",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "s",
						"type": "bytes32"
					}
				],
				"name": "transferWithAuthorization",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_account",
						"type": "address"
					}
				],
				"name": "unBlacklist",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unpause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newBlacklister",
						"type": "address"
					}
				],
				"name": "updateBlacklister",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newMasterMinter",
						"type": "address"
					}
				],
				"name": "updateMasterMinter",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newPauser",
						"type": "address"
					}
				],
				"name": "updatePauser",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newRescuer",
						"type": "address"
					}
				],
				"name": "updateRescuer",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"allowance(address,address)": {
					"params": {
						"owner": "Token owner's address",
						"spender": "Spender's address"
					},
					"returns": {
						"_0": "Allowance amount"
					}
				},
				"approve(address,uint256)": {
					"params": {
						"spender": "Spender's address",
						"value": "Allowance amount"
					},
					"returns": {
						"_0": "True if successful"
					}
				},
				"authorizationState(address,bytes32)": {
					"details": "Nonces are randomly generated 32-byte data unique to the authorizer's address",
					"params": {
						"authorizer": "Authorizer's address",
						"nonce": "Nonce of the authorization"
					},
					"returns": {
						"_0": "True if the nonce is used"
					}
				},
				"balanceOf(address)": {
					"details": "Get token balance of an account",
					"params": {
						"account": "address The account"
					}
				},
				"blacklist(address)": {
					"details": "Adds account to blacklist",
					"params": {
						"_account": "The address to blacklist"
					}
				},
				"burn(uint256)": {
					"details": "allows a minter to burn some of its own tokens Validates that caller is a minter and that sender is not blacklisted amount is less than or equal to the minter's account balance",
					"params": {
						"_amount": "uint256 the amount of tokens to be burned"
					}
				},
				"cancelAuthorization(address,bytes32,uint8,bytes32,bytes32)": {
					"details": "Works only if the authorization is not yet used.",
					"params": {
						"authorizer": "Authorizer's address",
						"nonce": "Nonce of the authorization",
						"r": "r of the signature",
						"s": "s of the signature",
						"v": "v of the signature"
					}
				},
				"configureMinter(address,uint256)": {
					"details": "Function to add/update a new minter",
					"params": {
						"minter": "The address of the minter",
						"minterAllowedAmount": "The minting amount allowed for the minter"
					},
					"returns": {
						"_0": "True if the operation was successful."
					}
				},
				"decreaseAllowance(address,uint256)": {
					"params": {
						"decrement": "Amount of decrease in allowance",
						"spender": "Spender's address"
					},
					"returns": {
						"_0": "True if successful"
					}
				},
				"increaseAllowance(address,uint256)": {
					"params": {
						"increment": "Amount of increase in allowance",
						"spender": "Spender's address"
					},
					"returns": {
						"_0": "True if successful"
					}
				},
				"initializeV2(string)": {
					"params": {
						"newName": "New token name"
					}
				},
				"isBlacklisted(address)": {
					"details": "Checks if account is blacklisted",
					"params": {
						"_account": "The address to check"
					}
				},
				"isMinter(address)": {
					"details": "Checks if account is a minter",
					"params": {
						"account": "The address to check"
					}
				},
				"mint(address,uint256)": {
					"details": "Function to mint tokens",
					"params": {
						"_amount": "The amount of tokens to mint. Must be less than or equal to the minterAllowance of the caller.",
						"_to": "The address that will receive the minted tokens."
					},
					"returns": {
						"_0": "A boolean that indicates if the operation was successful."
					}
				},
				"minterAllowance(address)": {
					"details": "Get minter allowance for an account",
					"params": {
						"minter": "The address of the minter"
					}
				},
				"nonces(address)": {
					"params": {
						"owner": "Token owner's address (Authorizer)"
					},
					"returns": {
						"_0": "Next nonce"
					}
				},
				"owner()": {
					"details": "Tells the address of the owner",
					"returns": {
						"_0": "the address of the owner"
					}
				},
				"pause()": {
					"details": "called by the owner to pause, triggers stopped state"
				},
				"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
					"params": {
						"deadline": "Expiration time, seconds since the epoch",
						"owner": "Token owner's address (Authorizer)",
						"r": "r of the signature",
						"s": "s of the signature",
						"spender": "Spender's address",
						"v": "v of the signature",
						"value": "Amount of allowance"
					}
				},
				"receiveWithAuthorization(address,address,uint256,uint256,uint256,bytes32,uint8,bytes32,bytes32)": {
					"details": "This has an additional check to ensure that the payee's address matches the caller of this function to prevent front-running attacks.",
					"params": {
						"from": "Payer's address (Authorizer)",
						"nonce": "Unique nonce",
						"r": "r of the signature",
						"s": "s of the signature",
						"to": "Payee's address",
						"v": "v of the signature",
						"validAfter": "The time after which this is valid (unix time)",
						"validBefore": "The time before which this is valid (unix time)",
						"value": "Amount to be transferred"
					}
				},
				"removeMinter(address)": {
					"details": "Function to remove a minter",
					"params": {
						"minter": "The address of the minter to remove"
					},
					"returns": {
						"_0": "True if the operation was successful."
					}
				},
				"rescueERC20(address,address,uint256)": {
					"params": {
						"amount": "Amount to withdraw",
						"to": "Recipient address",
						"tokenContract": "ERC20 token contract address"
					}
				},
				"rescuer()": {
					"returns": {
						"_0": "Rescuer's address"
					}
				},
				"totalSupply()": {
					"details": "Get totalSupply of token"
				},
				"transfer(address,uint256)": {
					"params": {
						"to": "Payee's address",
						"value": "Transfer amount"
					},
					"returns": {
						"_0": "True if successful"
					}
				},
				"transferFrom(address,address,uint256)": {
					"params": {
						"from": "Payer's address",
						"to": "Payee's address",
						"value": "Transfer amount"
					},
					"returns": {
						"_0": "True if successful"
					}
				},
				"transferOwnership(address)": {
					"details": "Allows the current owner to transfer control of the contract to a newOwner.",
					"params": {
						"newOwner": "The address to transfer ownership to."
					}
				},
				"transferWithAuthorization(address,address,uint256,uint256,uint256,bytes32,uint8,bytes32,bytes32)": {
					"params": {
						"from": "Payer's address (Authorizer)",
						"nonce": "Unique nonce",
						"r": "r of the signature",
						"s": "s of the signature",
						"to": "Payee's address",
						"v": "v of the signature",
						"validAfter": "The time after which this is valid (unix time)",
						"validBefore": "The time before which this is valid (unix time)",
						"value": "Amount to be transferred"
					}
				},
				"unBlacklist(address)": {
					"details": "Removes account from blacklist",
					"params": {
						"_account": "The address to remove from the blacklist"
					}
				},
				"unpause()": {
					"details": "called by the owner to unpause, returns to normal state"
				},
				"updatePauser(address)": {
					"details": "update the pauser role"
				},
				"updateRescuer(address)": {
					"params": {
						"newRescuer": "New rescuer's address"
					}
				}
			},
			"title": "FiatToken V2",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"allowance(address,address)": {
					"notice": "Amount of remaining tokens spender is allowed to transfer on behalf of the token owner"
				},
				"approve(address,uint256)": {
					"notice": "Set spender's allowance over the caller's tokens to be a given value."
				},
				"authorizationState(address,bytes32)": {
					"notice": "Returns the state of an authorization"
				},
				"cancelAuthorization(address,bytes32,uint8,bytes32,bytes32)": {
					"notice": "Attempt to cancel an authorization"
				},
				"decreaseAllowance(address,uint256)": {
					"notice": "Decrease the allowance by a given decrement"
				},
				"increaseAllowance(address,uint256)": {
					"notice": "Increase the allowance by a given increment"
				},
				"initializeV2(string)": {
					"notice": "Initialize v2"
				},
				"nonces(address)": {
					"notice": "Nonces for permit"
				},
				"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
					"notice": "Update allowance with a signed permit"
				},
				"receiveWithAuthorization(address,address,uint256,uint256,uint256,bytes32,uint8,bytes32,bytes32)": {
					"notice": "Receive a transfer with a signed authorization from the payer"
				},
				"rescueERC20(address,address,uint256)": {
					"notice": "Rescue ERC20 tokens locked up in this contract."
				},
				"rescuer()": {
					"notice": "Returns current rescuer"
				},
				"transfer(address,uint256)": {
					"notice": "Transfer tokens from the caller"
				},
				"transferFrom(address,address,uint256)": {
					"notice": "Transfer tokens by spending allowance"
				},
				"transferWithAuthorization(address,address,uint256,uint256,uint256,bytes32,uint8,bytes32,bytes32)": {
					"notice": "Execute a transfer with a signed authorization"
				},
				"updateRescuer(address)": {
					"notice": "Assign the rescuer role to a given address."
				}
			},
			"notice": "ERC20 Token backed by fiat reserves, version 2",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"src/USDC.sol": "FiatTokenV2"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"src/USDC.sol": {
			"keccak256": "0x79a86d7787c3d2b18eb36e2dfbd242bc9878d387dac118bcb79fd0e16c3e290c",
			"license": "MIT",
			"urls": [
				"bzz-raw://a3b6f593f6122b641c021cea3b9d6e0603792c913074e425465d7f78a58e5027",
				"dweb:/ipfs/QmR9dQDKGZBKapHtXeh8mp2pPsQXpKQbrJmr9XbhJpQAdF"
			]
		}
	},
	"version": 1
}